@model IEnumerable<BookingCalendar.Models.BookingTerm>

@{
    ViewBag.Title = "Index";
}

<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
<link rel="stylesheet" type ="text/css" href="~/Content/Site.css">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<div id="title-container">
    <h2 id ="#title-container" style="text-align:center"><b>Booking Calendar</b></h2>
</div>
<!-- The two divs below are set to invisible -->
<div id="booked-date">
    @foreach (var item in Model)
    {
        @Html.DisplayFor(modelItem => item.BookedDay)}
</div>

<div id="booked-info">
    @foreach (var item in Model)
    {
        @Html.DisplayFor(modelItem => item.BookedInfo)
        <span>##</span>
    }
</div>

    <div id="calendar-container"> </div>
    <div id="calendar-container-mobile"> </div>

    <script>
        $(document).ready(function () {

            let isMobile = window.matchMedia("only screen and (max-width: 760px)").matches;

            if (!isMobile) {
                setupActionsNotMobile();
                }
                  
            else {
                setupActionsMobile();
            }
        });

        function setupActionsMobile() {
            document.getElementById("title-container").style.textAlign = "left"; // To realign the H2 page title
            document.getElementById("calendar-container").style.display = "none"; // Makes non-mobile container invisible
            createCalendarsMobile(document.getElementById("calendar-container-mobile")); // Add 12 calendars to the calendar container
            addMonthRows(document.getElementsByClassName("months-mobile")); // Add 7 rows to each month
            addColsToMonths(); // Add columns to the month boxes (all rows containing a day of the week or dates)
            populateDaysOfWeek(); // Populate the days of the week rows
            addDateNumbers(document.getElementsByClassName("months-mobile"));
            addBlueOvals(listOfDatesAndInfo());
            addListeners(listOfDatesAndInfo());
        }
        function setupActionsNotMobile() {
            document.getElementById("calendar-container-mobile").style.display = "none"; // Makes mobile container invisible
            createCalendars(document.getElementById("calendar-container")); // Add 12 calendars to the calendar container
            addMonthRows(document.getElementsByClassName("months")); // Add 7 rows to each month
            addColsToMonths(); // Add columns to the month boxes (all rows containing a day of the week or dates)
            populateDaysOfWeek(); // Populate the days of the week rows
            addDateNumbers(document.getElementsByClassName("months"));
            addBlueOvals(listOfDatesAndInfo());
            addListeners(listOfDatesAndInfo());
        }

        function createCalendars(container) {
            for (var i = 0; i < 12; i++) {
                var calendar = document.createElement("div");
                calendar.setAttribute("class", "months");
                calendar.setAttribute("monthNumber", i);
                container.appendChild(calendar);
            }
        }

        function createCalendarsMobile(container) {
            for (var i = 0; i < 12; i++) {
                var calendar = document.createElement("div");
                calendar.setAttribute("class", "months-mobile");
                calendar.setAttribute("monthNumber", i);
                container.appendChild(calendar);
            }
        }

        function addMonthRows(months) {
            var topRowCount = 0;
            for (var month of months) {
                for (var j = 0; j < 9; j++) {
                    var newRow = document.createElement("div");
                    newRow.setAttribute("class", "month-row");
                    newRow.setAttribute("row-number", j);
                    if (j === 0) {
                        newRow.setAttribute("class", "month-top-row");
                        newRow.innerHTML = getMonthName(topRowCount++);
                    }
                    if (j === 2) {
                        newRow.setAttribute("class", "month-days-row");
                    }
                    month.appendChild(newRow);
                }
            }
        }

        function getMonthName(monthNumber) {
            switch (monthNumber) {
                case 0:
                    return "January";
                case 1:
                    return "February";
                case 2:
                    return "March";
                case 3:
                    return "April";
                case 4:
                    return "May";
                case 5:
                    return "June";
                case 6:
                    return "July";
                case 7:
                    return "August";
                case 8:
                    return "September";
                case 9:
                    return "October";
                case 10:
                    return "November";
                default:
                    return "December";
            }
        }             

        function addColsToMonths() {
            var rows = document.getElementsByClassName("month-row");
            for (var individualRow of rows) {
                if (individualRow.getAttribute("row-number") <= 1) {
                    continue;
                }
                for (var k = 0; k < 7; k++) {
                    var col = document.createElement("div");
                    col.setAttribute("class", "calendar-column");
                    individualRow.appendChild(col);
                }
            }
        }

        // Populate days of the week row
        function populateDaysOfWeek() {
            var daysRow = document.getElementsByClassName("month-days-row")
            for (var thisMonthsRow of daysRow) {
                for (var colNum = 0; colNum < 7; colNum++) {
                    var col = document.createElement("div");
                    col.setAttribute("class", "day-of-week-column");
                    col.innerHTML = getDayName(colNum);
                    thisMonthsRow.appendChild(col);
                }
            }
        }

        function getDayName(dayNum) {
            switch (dayNum) {
                case 0:
                    return "Mon";
                case 1:
                    return "Tue";
                case 2:
                    return "Wed";
                case 3:
                    return "Thu";
                case 4:
                    return "Fri";
                case 5:
                    return "Sat";
                case 6:
                    return "Sun";
            }
        }

        function addDateNumbers(months) {
            for (var month of months) {
                var year = new Date().getFullYear();
                var monthNum = parseInt(month.getAttribute("monthNumber")); // Jan = 0, Feb = 1, etc.
                var dayOnFirstOfMonth = new Date(year, monthNum, 1).getDay(); // With getDay() method, 0 is Sunday, 1 Monday, etc
                var daysInMonth = new Date(year, monthNum + 1, 0).getDate();
                var dateEntries = month.getElementsByClassName("calendar-column");
                var daysToAdd = dayOnFirstOfMonth != 0 ? dayOnFirstOfMonth - 1 : 6; // Because there may be blank cells, due to the first not being on Monday
                var count = 1;
                for (var i = daysToAdd; i < daysToAdd + daysInMonth; i++) {
                    dateEntries[i].textContent = count++;
                }
            }
        }

        // Returns an array of arrays. Each array represents a separate date and its text message.

        function listOfDatesAndInfo() {
            var bookedDates = document.getElementById("booked-date").textContent;
            var bookedDatesList = bookedDates.split("00:00:00");
            var bookedInfo = document.getElementById("booked-info").textContent;
            var bookedInfoList = bookedInfo.split("##");
            var combinedList = [];
            var count = 0;
            for (var bookedDatesListElem of bookedDatesList) {
                var tempList = [];
                bookedDatesListElem = bookedDatesListElem.trim();
                var d = bookedDatesListElem.substring(0, 2);
                var m = bookedDatesListElem.substring(3, 5);
                var y = bookedDatesListElem.substring(6, 10);
                tempList.push(d);
                tempList.push(m);
                tempList.push(y);
                tempList.push(bookedInfoList[count++]);
                combinedList.push(tempList);
            }
            return combinedList;
        }

        function addBlueOvals(combinedList) {
            for (var list of combinedList) {
                let elem = getDateElem(parseInt(list[0]), parseInt(list[1]) - 1, parseInt(list[2]));
                if (list[0] != "") {
                    $(elem).addClass("blue-oval");
                }
            }
        }

        var clicked = false;

        function addListeners(combinedList) {
            for (var list of combinedList) {
                if (list[0] != "") {
                    let elem = getDateElem(parseInt(list[0]), parseInt(list[1]) - 1, parseInt(list[2]));
                    $(elem).click(displayMessage(list[3], elem));
                    $(elem).mouseout(removeMessage(elem));
                }
            }
        }

        function displayMessage(message, elementToChange) {
            elementToChange.setAttribute("data-toggle", "tooltip");
            elementToChange.setAttribute("title", message);
            elementToChange.setAttribute("data-placement", "top");
            $(elementToChange).tooltip();
        }

        function removeMessage(elementToChange) {
            $(elementToChange).tooltip('hide');
        }

        // Month passed in using 0 = Jan, 1 = Feb, etc.

        function getDateElem(day, mth, yr) {
            if (yr != new Date().getFullYear()) {
                return; // Prevents dates from previous or future years being added.
            }
            // The class name used for 'month' depends on whether the device is a mobile or not. 
            var month;
            if (document.getElementsByClassName("months")[mth] == null) {
                month = document.getElementsByClassName("months-mobile")[mth];
            }
            else {
                month = document.getElementsByClassName("months")[mth];
            }
            var entries = month.getElementsByClassName("calendar-column");
            var dayOnFirstOfMonth = new Date(yr, mth, 1).getDay(); // 0 is Sunday, 1 is Monday, etc
            var daysToAdd = dayOnFirstOfMonth != 0 ? dayOnFirstOfMonth - 2 : 5; // Because there may be blank cells, due to the first not being on Monday
            return entries[day + daysToAdd];
        }

    </script>


    <style>
        #calendar-container {
            padding: 0px;
            width: 100vh;
            height: 90vh;
            background-color: #F5F5F5;
        }

        .months {
            margin: 1%;
            width: 31%;
            height: 22%;
            padding: 2%;
            float: left;
            background-color: white;
        }

        .month-row {
            width: 100%;
            height: 12%;
        }

        .month-top-row {
            width: 100%;
            height: 12.5%;
            text-align: center;
            font-weight: 700;
        }

        .month-days-row {
            width: 100%;
            height: 12.5%;
            text-align: center;
            font-weight: 700;
        }

        .calendar-column {
            width: 14.2%;
            height: 100%;
            float: left;
            text-align: center;
            color: red;
        }

        .day-of-week-column {
            width: 14.2%;
            height: 100%;
            float: left;
            font-weight: 700;
        }

        #booked-date {
            display: none;
        }

        #booked-info {
            display: none;
        }

        .blue-oval {
            width: 14.2%;
            height: 100%;
            background: #1E90FF;
            border-radius: 100px / 50px;
            text-align: center;
            color: white;
        }

        .tooltip {
            position: absolute;
            z-index: 1020;
            display: block;
            visibility: visible;
            padding: 5px;
            font-size: 11px;
        }

            .tooltip.in {
                opacity: 1;
            }

            .tooltip.top {
                margin-top: -2px
            }

            .tooltip.right {
                margin-left: 2px
            }

            .tooltip.bottom {
                margin-top: 2px
            }

            .tooltip.left {
                margin-left: -2px
            }

            .tooltip.top .tooltip-arrow {
                background-color: #1E90FF;
                bottom: 0;
                left: 50%;
                margin-left: -5px;
                border-left: 5px solid;
                border-right: 5px solid;
                border-top: 5px solid #1E90FF;
            }

            .tooltip.left .tooltip-arrow {
                background-color: #1E90FF;
                top: 50%;
                right: 0;
                margin-top: -5px;
                border-top: 5px solid;
                border-bottom: 5px solid;
                border-left: 5px solid #1E90FF;
            }

            .tooltip.bottom .tooltip-arrow {
                background-color: #1E90FF;
                top: 0;
                left: 50%;
                margin-left: -5px;
                border-left: 5px solid;
                border-right: 5px solid;
                border-bottom: 5px solid #1E90FF;
            }

            .tooltip.right .tooltip-arrow {
                background-color: #1E90FF;
                top: 50%;
                left: 0;
                margin-top: -5px;
                border-top: 5px solid;
                border-bottom: 5px solid;
                border-right: 5px solid #1E90FF;
            }

        .tooltip-inner {
            max-width: 200px;
            padding: 3px 8px;
            color: white;
            text-align: center;
            text-decoration: none;
            background-color: #1E90FF;
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px
        }

        .tooltip-arrow {
            background-color: #1E90FF;
            position: absolute;
            width: 0;
            height: 0
        }
        /* Mobile classes */

        #calendar-container-mobile {
            padding: 3%;
            margin: 10%;
            width: 70vw;
            height: 1050vw;
            background-color: #F5F5F5;
            display: block;
        }

        .months-mobile {
            width: 90%;
            height: 5%;
            margin: auto;
            background-color: white;
            border: 3px solid #F5F5F5;
        }
    </style>




